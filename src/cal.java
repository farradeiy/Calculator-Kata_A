//Требования:
//+Калькулятор умеет выполнять операции сложения, вычитания, умножения и деления с двумя числами: a + b, a - b, a * b, a / b. Данные передаются в одну строку (смотри пример)! Решения, в которых каждое число и арифмитеческая операция передаются с новой строки считаются неверными.
//+Калькулятор умеет работать как с арабскими (1,2,3,4,5...), так и с римскими (I,II,III,IV,V...) числами.
//+Калькулятор должен принимать на вход числа от 1 до 10 включительно, не более. На выходе числа не ограничиваются по величине и могут быть любыми.
//+Калькулятор умеет работать только с целыми числами.
//+Калькулятор умеет работать только с арабскими или римскими цифрами одновременно, при вводе пользователем строки вроде 3 + II калькулятор должен выбросить исключение и прекратить свою работу.
//При вводе римских чисел, ответ должен быть выведен римскими цифрами, соответственно, при вводе арабских - ответ ожидается арабскими.
//+При вводе пользователем неподходящих чисел приложение выбрасывает исключение и завершает свою работу.
//+При вводе пользователем строки, не соответствующей одной из вышеописанных арифметических операций, приложение выбрасывает исключение и завершает свою работу.
//+Результатом операции деления является целое число, остаток отбрасывается.
//Результатом работы калькулятора с арабскими числами могут быть отрицательные числа и ноль. Результатом работы калькулятора с римскими числами могут быть только положительные числа, если результат работы меньше единицы, выбрасывается исключение


import java.util.Scanner;
class cal {
    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);       //Запрос ввода данных в консоли
        System.out.print("Введите выражение: ");    //Видем что от нас требуют
        String deg = scn.nextLine();                //Получили выражение
                                                    //deg = degeneration(выражение)
        // Убираем пробелы в выражение если есть
        deg = deg.replace(" ", ""); //Убрали все лишнее чтобы не было ошибок

        // Разделяем на операторы и операнд
        String[] data = null;                       //Операнды a и b (Массив 2 и болие переменных)
        String ac = null;                           //Значение арифметическое действие
                                                    //ac = action(действие)
        if (deg.contains("+")){                     //Проверяем если в нашем выражение есть + то
            data = deg.split("\\+");          //Мы разделяем наши операнды на 2 с помощью метода .split убирая между a и b знак + и запоминаем их в массиве переменных data
            ac = "+";                               //И запоминаем в переменной ac наш знак
        } else if (deg.contains("-")){              //Если же наше выражение нет знака выше продолжаем проверять остальные знаки по примеру выше
            data = deg.split("-");
            ac = "-";
        } else if (deg.contains("*")){
            data = deg.split("\\*");
            ac = "*";
        } else if (deg.contains("/")){
            data = deg.split("/");
            ac = "/";
        } else {                                    //В случае если нужно знака нет то в консоль выдается ошибка
            System.out.println("Строка не является математической операцией");
            return;                                 // Завершаем работу
        }

        // Проверка на количество операндов и операторов
        if(data.length !=2){                        //Проверяем наш массив переменных data и если их количество не = 2 то в консоль выдается ошибка
            System.out.println("Формат математической операции не удовлетворяет заданию - два операнда и один оператор");
            return;                                 // Завершаем работу
        }

        //Проверяем наш массив переменных data написаны на арабские или на римском
                                                    //oper = operands(операнд)
        int oper1;                                  //
        int oper2;
        boolean isRoman;
        if (Roman.isRoman(data[0]) && Roman.isRoman(data[1])) { //Проверяем наши оперенды если они = римским то конвертируем из в арабские числа и переводим его в тип int
                                                                //Операторы & и && - это логические операторы И. Работает так: если хотя бы одно условие false, то результат - false.
                                                                // Т.е, чтобы результат был true, надо чтобы оба условия были true.
            //Конвертируем оба числа в арабские если они римские
            oper1 = Roman.convertToArabian(data[0]);
            oper2 = Roman.convertToArabian(data[1]);
            isRoman = true; // Если оба числа римские переходим else if и String преобразовываем а int
        }
        //Если оба числа арабские преобразовываем из String в int
        else if (!Roman.isRoman(data[0]) && !Roman.isRoman(data[1])) {  //Если же наши операнды не = римским то наши переменные переводим из типа String в int
            oper1 = Integer.parseInt(data[0]);
            oper2 = Integer.parseInt(data[1]);
            isRoman = false;
        }
        //Если одни число римское, а другое - арабское
        else {                                                  //Если же проверка нашего вырашение  вырожения не прошла значит были введены одновременно
                                                                // и арабское и римские то в консоль выдается ошибка
            System.out.println("Числа должны быть в одном формате");
            return;                                 // Завершаем работу
        }
        // Проверяем на то что оба числа не менее 1 и не более 10
        if (oper1 > 10 || oper2 > 10) {         //Операторы | и || - это логические операторы ИЛИ.Работает так: если хотя бы одно условие true, то все результат true.
                                                // Т.е., если одно условие false, а другое - true, то результат true.
            System.out.println("Числа должны быть от 1 до 10");
            return;
        }

        // Калькулятор
        int ara;
        switch (ac){
            case "+": ara = oper1+oper2;
                break;
            case "-": ara = oper1-oper2;
                break;
            case "*": ara = oper1*oper2;
                break;
            default:  ara = oper1/oper2;
                break;
        }

        // Проверяем были выедены введены в начале римские или арабские и выводим в правильном формате ответ.
        String result;
        if (isRoman) {                          //Если вводили римские цифры то
            //если римское число получилось меньше либо равно нулю, генерируем ошибку
            if (ara <= 0) {                     //Проверяем ответ выражения <= 0 и ели это правда выводим ошибку в консоль по скольку римские цифры не могут быть отрицательные
                System.out.println("В римской системе нет отрицательных чисел");
                return;                         //Завершаем работу
            }
            //конвертируем результат операции из арабского в римское
            result = Roman.convertToRoman(ara); //Если же проходит проверку то конвертируем наш результат в римское число и запоминаем его в переменную result
        } else {
            //Конвертируем арабское число в тип String
            result = String.valueOf(ara);       //Если же проверка ложна то преобразовываем из int в String и сохраняем в в переменную result
        }
        // Вывод ответа
        System.out.println(result);             //Вывод результата

    }
}

class Roman {
    static String[] romanArray = new String[]{"0", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI",
            "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX", "XXI", "XXII", "XXIII", "XXIV",
            "XXV", "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI",
            "XXXVII", "XXXVIII", "XXXIX", "XL", "XLI", "XLII", "XLIII", "XLIV", "XLV", "XLVI", "XLVII", "XLVIII",
            "XLIX", "L", "LI", "LII", "LIII", "LIV", "LV", "LVI", "LVII", "LVIII", "LIX", "LX", "LXI", "LXII",
            "LXIII", "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX", "LXX", "LXXI", "LXXII", "LXXIII", "LXXIV",
            "LXXV", "LXXVI", "LXXVII", "LXXVIII", "LXXIX", "LXXX", "LXXXI", "LXXXII", "LXXXIII", "LXXXIV", "LXXXV",
            "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC", "XCI", "XCII", "XCIII", "XCIV", "XCV", "XCVI", "XCVII",
            "XCVIII", "XCIX", "C"};


    public static boolean isRoman(String val) {
        for (int i = 0; i < romanArray.length; i++) {
            if (val.equals(romanArray[i])) {
                return true;
            }
        }
        return false;
    }

    public static int convertToArabian(String roman) {
        for (int i = 0; i < romanArray.length; i++) {
            if (roman.equals(romanArray[i])) {
                return i;
            }
        }
        return -1;
    }

    public static String convertToRoman(int ara) {

        return romanArray[ara];
    }

}
